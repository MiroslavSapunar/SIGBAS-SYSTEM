// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  pass          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Student       Student?
  Organization  Organization?
  Company       Company?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// model User {
//   id             Int           @id @default(autoincrement())
//   username       String        @unique
//   pass           String        @db.VarChar(255)
//   createtAd      DateTime      @default(now()) @db.Timestamp(6)
//   update         DateTime      @updatedAt @db.Timestamp(6)
//   isWorker       Boolean       @default(false)
//   isAuthority    Boolean       @default(false)
//   isStudent      Boolean       @default(false)
//   student        Student?
//   isOrganization Boolean       @default(false)
//   organization   Organization?
//   isCompany      Boolean       @default(false)
//   company        Company?
// }

model Student {
  id                   String                @id @default(cuid())
  cuit                 String                @db.VarChar(255)
  address                 String                @db.VarChar(255)
  name                 String                @db.VarChar(255)
  surname              String                @db.VarChar(255)
  gender               String                @db.VarChar(255)
  email                String                @db.VarChar(255)
  telephone            String                @db.VarChar(255)
  birthday             String                @db.VarChar(255)
  dni                  String                @db.VarChar(255)
  academicRegister     String                @db.VarChar(255) // padron
  // Carrers              Carrer[] // carrera/S
  careerCurriculumName String                @db.VarChar(255)
  user                 User?                 @relation(fields: [userId], references: [id])
  userId               String?               @unique
  IndividualAgreements IndividualAgreement[]
  createtAd            DateTime              @default(now()) @db.Timestamp(6)
  update               DateTime              @updatedAt @db.Timestamp(6)
  // psantias previas
  // bolsa de trabajo
  // CV
  // Becas
}

// model Carrer {
//   id                           Int      @id @default(autoincrement())
//   careerCurriculumName         String   @db.VarChar(255) // nombre de la carrera
//   careerCurriculumPlan         String   @db.VarChar(255) // Plan de la carrera
//   careerCurriculumStartingDate String   @db.VarChar(255) //inicio de cursada de la carrera
//   careerCurriculumCredits      String   @db.VarChar(255) // nombre de la carrera
//   isCareerCourseActive         Boolean  @default(false) //regular
//   student                      Student? @relation(fields: [studentId], references: [id])
//   studentId                    Int?
//   createtAd                    DateTime @default(now()) @db.Timestamp(6)
//   update                       DateTime @updatedAt @db.Timestamp(6)
// }

model Organization {
  id                  String                @id @default(cuid())
  cuit                String                @unique @db.VarChar(255)
  bussinesName        String                @db.VarChar(255)
  fantasyName         String                @db.VarChar(255)
  contactName         String                @db.VarChar(255)
  email               String                @db.VarChar(255)
  // localidad
  // email de representante legal
  telephone           String                @db.VarChar(255)
  workField           String                @db.VarChar(255)
  user                User                  @relation(fields: [userId], references: [id])
  userId              String                @unique
  createtAd           DateTime              @default(now()) @db.Timestamp(6)
  update              DateTime              @updatedAt @db.Timestamp(6)
  FrameworkAgreement  FrameworkAgreement[]
  IndividualAgreement IndividualAgreement[]
}

model Company {
  id                  String                @id @default(cuid())
  cuit                String                @unique @db.VarChar(255)
  contactName         String                @db.VarChar(255)
  email               String                @db.VarChar(255)
  telephone           String                @db.VarChar(255)
  workField           String                @db.VarChar(255)
  tipodeempresa           String                @db.VarChar(255)
  user                User                  @relation(fields: [userId], references: [id])
  userId              String                @unique
  createtAd           DateTime              @default(now()) @db.Timestamp(6)
  update              DateTime              @updatedAt @db.Timestamp(6)
  FrameworkAgreement  FrameworkAgreement[]
  IndividualAgreement IndividualAgreement[]
}

model FrameworkAgreement {
  id               String       @id @default(cuid())
  recordNumber     String       @unique @db.VarChar(255)
  resolutionNumber String       @unique @db.VarChar(255)
  approvalDate     String       @db.VarChar(255)
  endDate          String       @db.VarChar(255)
  isSigned         Boolean      @default(false)
  isCompany        Boolean      @default(false)
  company          Company      @relation(fields: [companyId], references: [id])
  companyId        String
  isOrganization   Boolean      @default(false)
  organization     Organization @relation(fields: [organizationId], references: [id])
  organizationId   String
  createtAd        DateTime     @default(now()) @db.Timestamp(6)
  update           DateTime     @updatedAt @db.Timestamp(6)
  Intership        Intership[]
}

model IndividualAgreement {
  id               String       @id @default(cuid())
  recordNumber     String       @unique @db.VarChar(255)
  resolutionNumber String       @unique @db.VarChar(255)
  referenceNumber  String       @unique @db.VarChar(255)
  approvalDate     String       @db.VarChar(255)
  endDate          String       @db.VarChar(255)
  company          Company      @relation(fields: [companyId], references: [id])
  companyId        String
  organization     Organization @relation(fields: [organizationId], references: [id])
  organizationId   String
  student          Student      @relation(fields: [studentId], references: [id])
  studentId        String
  hasDue           Boolean      @default(false)
  createtAd        DateTime     @default(now()) @db.Timestamp(6)
  update           DateTime     @updatedAt @db.Timestamp(6)
  Intership        Intership?
}

model Intership {
  id                    String               @id @default(cuid())
  startingDate          String               @db.VarChar(255)
  endingDate            String               @db.VarChar(255)
  totalAmount           String               @db.VarChar(255)
  monthlyAmount         String               @db.VarChar(255)
  guidingTeacher        String               @db.VarChar(255)
  guidingExternal       String               @db.VarChar(255)
  receiptNumber         String               @db.VarChar(255)
  billingStatus         String               @db.VarChar(255)
  individualAgreement   IndividualAgreement  @relation(fields: [individualAgreementId], references: [id])
  individualAgreementId String               @unique
  frameworkAgreement    FrameworkAgreement   @relation(fields: [frameworkAgreementId], references: [id])
  frameworkAgreementId  String
  IntershipEvaluation   IntershipEvaluation?
}

model IntershipEvaluation {
  id          String    @id @default(cuid())
  score       String    @db.VarChar(255)
  comments    String    @db.VarChar(255)
  intership   Intership @relation(fields: [intershipId], references: [id])
  intershipId String    @unique
}
